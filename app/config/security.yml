security:
    encoders:
        Waripub\MainBundle\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_SOUSCRIPTEUR: ROLE_SOUSCRIPTEUR
        ROLE_PRESTATAIRE: ROLE_PRESTATAIRE
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        waripub_db_provider:
            entity:
                class: WaripubMainBundle:User
                #property: username
                # if you're using multiple entity managers
                # manager_name: customer

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern:    ^/
            anonymous: ~
            http_basic: ~
            provider: waripub_db_provider
            form_login:
                login_path: login
                check_path: login
                default_target_path: login
                always_use_default_target_path: true
            remember_me:
                secret:   '%secret%'
                lifetime: 604800 # 1 week in seconds
                path:     /
            logout:
                path: /deconnexion
                target: /connexion
                # by default, the feature is enabled by checking a
                # checkbox in the login form (see below), uncomment the
                # following line to always enable it.
                #always_remember_me: true
        secured_area:
            form_login:
                csrf_token_generator: security.csrf.token_manager
                csrf_parameter: _csrf_security_token
                csrf_token_id: a_private_string


    access_control:
        - { path: ^/connexion, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/inscription, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/*, role: ROLE_ADMIN }
        - { path: ^/souscripteur/*, role: ROLE_SOUSCRIPTEUR }
        - { path: ^/prestataire/*, role: ROLE_PRESTATAIRE }
        - { path: ^/compte , role:  [ROLE_PRESTATAIRE, ROLE_SOUSCRIPTEUR, ROLE_ADMIN]  }

# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
#security:

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
#    providers:
#        in_memory:
#            memory: ~

#    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false

#        main:
#            anonymous: ~
            # activate different ways to authenticate

            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate
            #http_basic: ~

            # https://symfony.com/doc/current/security/form_login_setup.html
            #form_login: ~

# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
# app/config/security.yml
#security:
#    encoders:
#        FOS\UserBundle\Model\UserInterface: bcrypt

#    role_hierarchy:
#        ROLE_SOUSCRIPTEUR: ROLE_SOUSCRIPTEUR
#        ROLE_PRESTATAIRE: ROLE_PRESTATAIRE
#        ROLE_SUPER_ADMIN: ROLE_ADMIN

#    providers:
#        fos_userbundle:
#            id: fos_user.user_provider.username_email

#    firewalls:
#        main:
#            pattern: ^/
#            form_login:
#                provider: fos_userbundle
#                csrf_token_generator: security.csrf.token_manager
#            logout:       true
#            anonymous:    true

#    access_control:
#        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/admin/, role: ROLE_ADMIN }